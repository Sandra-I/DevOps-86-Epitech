---
# Include variables and define needed variables.
- name: Debian | Include OS-specific variables.
  include_vars: "default.yml"

- name: Nginx install
  become: true
  apt:
    name: nginx
    state: latest

- name: Start Nginx
  become: true
  service:
    name: nginx
    state: started
    enabled: true

- name: Remove old Nginx conf
  file:
    path: "{{ item }}"
    state: absent
  with_items: 
    - /etc/nginx/sites-enabled/default
    - /etc/nginx/sites-available/default
  become: yes

- name: Create new Nginx conf
  template:
    src: templates/nginx.j2
    dest: /etc/nginx/sites-available/back.testlab.com
  become: yes

- name: Active domain
  file:
    src: /etc/nginx/sites-available/back.testlab.com
    dest: /etc/nginx/sites-enabled/back.testlab.com
    state: link
  become: yes

- name: Nginx restart
  service:
    name: nginx
    state: restarted

- name: PHP install
  become: true
  apt: 
    name: "{{ php_packages }}"
    state: latest
    update_cache: yes

- name: Security
  lineinfile:
    dest: /etc/php/7.3/apache2/php.ini
    regexp: 'disable_functions[\s]?='
    line: 'disable_functions = exec,passthru,shell_exec,proc_open,popen'
- lineinfile:
    dest: /etc/php/7.3/apache2/php.ini
    regexp: 'upload_max_filesize[\s]?='
    line: 'upload_max_filesize = {{ php_upload_max_filesize }}'
- lineinfile:
    dest: /etc/php/7.3/apache2/php.ini
    regexp: 'memory_limit[\s]?='
    line: 'memory_limit = {{ php_memory_limit }}'
- lineinfile:
    dest: /etc/php/7.3/apache2/php.ini
    regexp: 'date.timezone[\s]?='
    line: 'date.timezone = {{ php_timezone }}'

- name: Ensures Composer Dir exists
  file: 
    path: /usr/src/composer 
    state: directory

- name: Download Composer
  get_url:
    url: https://getcomposer.org/installer
    dest: /usr/src/composer/installer
    checksum: "sha384:756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3"
  become: yes

- name: Install Composer
  shell: php installer
  args:
    chdir: /usr/src/composer
  become: yes

- name: Add Composer to global path
  copy: 
    dest: /usr/local/bin/composer
    group: root
    mode: '0755'
    owner: root
    src: /usr/src/composer/composer.phar
    remote_src: yes
  become: yes

- name: Install Npm
  apt: 
    name: npm
    update_cache: yes
    state: latest
  
- name: Git Clone Repo
  git: 
    repo: https://gitlab.com/bastien-angles/devops-86.git
    dest: /var/www/back.testlab.com
    version: "master"
  become: yes

- name: Create new .env
  template:
    src: templates/env.j2
    dest: /var/www/back.testlab.com/back/.env
  become: yes

- name: Remove old composer.lock
  file:
    path: /var/www/back.testlab.com/back/composer.lock
    state: absent
  become: yes

- name: Install packages based on composer.json
  expect:
    chdir: /var/www/back.testlab.com/back
    command: composer update
    responses:
      (.*)Continue as root/super user(.*): "yes"
    timeout: 300

- name: Install packages based on package.json
  shell: npm install
  args:
    chdir: /var/www/back.testlab.com/back

- name: Launch migration and seeders
  shell: php artisan migrate:refresh --seed
  args:
    chdir: /var/www/back.testlab.com/back